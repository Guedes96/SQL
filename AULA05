CREATE DATABASE dbVendas
GO
USE dbVendas
GO

/*=============================================== CRIAÇÃO DE TABELA ===============================================*/
CREATE TABLE tbVendedor (
	  cdVendedor INT NOT NULL	
	, nmVendedor VARCHAR(40) NOT NULL
	, dsEndereco VARCHAR(40) NOT NULL
	, cdCPF VARCHAR(15) NOT NULL
	, nmCidade VARCHAR(40) NOT NULL
	, nmBairro VARCHAR(40) NOT NULL
	, sgEstado CHAR(02) NOT NULL
	, cdTelefone VARCHAR(20) NOT NULL
	, dsEmail VARCHAR(60) NOT NULL
)

CREATE TABLE tbComprador(
	  cdComprador INT NOT NULL
	, nmComprador VARCHAR(40) NOT NULL
	, dsEndereco VARCHAR(40) NOT NULL
	, cdCPF VARCHAR(20) NOT NULL
	, nmCidade VARCHAR(40) NOT NULL
	, nmBairro VARCHAR(40) NOT NULL
	, sgEstado CHAR(02) NOT NULL
	, cdTelefone VARCHAR(20) NOT NULL
	, dsEmail VARCHAR(60) NOT NULL
)
CREATE TABLE tbImovel(
	  cdImovel INT NOT NULL
	, cdVendedor INT NOT NULL
	, cdBairro INT NOT NULL
	, cdCidade INT NOT NULL
	, sgEstado CHAR(02)
	, dsEndereco VARCHAR(40) NOT NULL
	, qtAreaUtil DECIMAL(10,2) NOT NULL
	, qtAreaTotal DECIMAL(10,2) NOT NULL
	, dsImovel VARCHAR(300) NOT NULL
	, vlImovel MONEY NOT NULL
	, qtOferta INT NOT NULL
	, icVendido CHAR(1) NOT NULL
	, dtLancto DATETIME NOT NULL
	, qtImovelIndicado INT NOT NULL

)

CREATE TABLE tbOferta(
	  cdComprador INT NOT NULL
	, cdImovel	INT NOT NULL
	, vlOferta MONEY NOT NULL
	, dtOferta DATETIME NOT NULL
)

CREATE TABLE tbEstado(
	  sgEstado CHAR(02) NOT NULL
	, nmEstado VARCHAR(40) NOT NULL
)

CREATE TABLE tbCidade(
	  cdCidade INT NOT NULL
	, sgEstado CHAR(02) NOT NULL
	, nmCidade VARCHAR(40) NOT NULL
)

CREATE TABLE tbBairro(
	  cdBairro INT NOT NULL
	, cdCidade INT NOT NULL
	, sgEstado CHAR(02) NOT NULL
	, nmBairro VARCHAR(40) NOT NULL
)

CREATE TABLE tbFaixaImovel(
	  cdFaixa INT NOT NULL
	, nm_Faixa VARCHAR(20)
	, vlMaximo MONEY NOT NULL
	, vlMinimo MONEY NOT NULL
)

-- AULA 04
CREATE TABLE tbIptuImovel(
	  cdImovel INT NOT NULL
	, cdParcela INT NOT NULL
	, aaIptu INT NOT NULL
	, dtVencimento DATE 
	, vlParcela MONEY NOT NULL
	, dtPago DATE NOT NULL
	, vlPago MONEY NOT NULL
	, vlMulta MONEY NOT NULL
	, cdComprador INT NOT NULL
)


/*=============================================== ATRIBUIÇÃO DE CHAVE PRIMÁRIA ===============================================*/

ALTER TABLE tbVendedor
ADD CONSTRAINT pkVendedor PRIMARY KEY (cdVendedor)

ALTER TABLE tbComprador
ADD CONSTRAINT pkComprador PRIMARY KEY (cdComprador)

ALTER TABLE tbImovel
ADD CONSTRAINT pkImovel PRIMARY KEY (cdImovel)

--ALTER TABLE tbOferta
--ADD PRIMARY KEY (cdComprador, cdImovel)

ALTER TABLE tbEstado
ADD CONSTRAINT pkEstado PRIMARY KEY (sgEstado)

ALTER TABLE tbCidade
ADD CONSTRAINT pkCidade PRIMARY KEY (cdCidade)

ALTER TABLE tbBairro
ADD CONSTRAINT pkBairro PRIMARY KEY (cdBairro, cdCidade, sgEstado )

ALTER TABLE tbFaixaImovel
ADD CONSTRAINT pkFaixa PRIMARY KEY (cdFaixa)

-- AULA 04
ALTER TABLE tbIptuImovel
ADD CONSTRAINT pkIptuImovel PRIMARY KEY (cdImovel, cdParcela)

/*=============================================== ATRIBUIÇÃO DE CHAVE ESTRANGEIRA ===============================================*/

ALTER TABLE tbOferta
ADD CONSTRAINT fkComprador FOREIGN KEY (cdComprador)
REFERENCES tbComprador

ALTER TABLE tbOferta
ADD  CONSTRAINT fkImovel FOREIGN KEY (cdImovel)
REFERENCES tbImovel

ALTER TABLE tbImovel
ADD  CONSTRAINT fkVendedor FOREIGN KEY (cdVendedor)
REFERENCES tbVendedor

ALTER TABLE tbCidade
ADD  CONSTRAINT fkEstado FOREIGN KEY (sgEstado)
REFERENCES tbEstado

ALTER TABLE tbBairro
ADD  CONSTRAINT fkCidade FOREIGN KEY (cdCidade)
REFERENCES tbCidade

ALTER TABLE tbImovel
ADD CONSTRAINT fkBairroCidadeEstado FOREIGN KEY (cdBairro, cdCidade, sgEstado)
REFERENCES tbBairro

 -- AULA 04
ALTER TABLE tbIptuImovel
ADD CONSTRAINT fkIptuImovel FOREIGN KEY (cdComprador)
REFERENCES tbComprador

--/*=============================================== ALTERANDO TABELA ===============================================*/


-- AULA 04
ALTER TABLE tbIptuImovel
ADD qtNParcela INT 

ALTER TABLE tbIptuImovel
ADD CONSTRAINT CK_qtNParcela CHECK(qtNParcela >= 1 AND qtNParcela <= 12)

exec sp_rename
'tbIptuImovel.vlPago', 'vlPagamento'

exec sp_rename
'dbo.tbIptuImovel','tbIPTU_Imovel'

ALTER TABLE tbIPTU_Imovel
ADD CONSTRAINT CK_dtVencimento CHECK(year(dtVencimento) = year(aaIptu))

ALTER TABLE tbIPTU_Imovel
ADD CONSTRAINT CK_vlPagamento CHECK(vlPagamento >= vlParcela)

ALTER TABLE tbIPTU_Imovel
DROP CONSTRAINT CK_QTNPARCELA

ALTER TABLE tbIPTU_Imovel
DROP COLUMN qtNParcela

ALTER TABLE tbIPTU_Imovel
DROP CONSTRAINT CK_VLpAGAMENTO

ALTER TABLE tbIPTU_Imovel
DROP CONSTRAINT CK_dtVencimento 

ALTER TABLE tbIPTU_Imovel
DROP CONSTRAINT pkIptuImovel

ALTER TABLE tbIPTU_Imovel
ADD CONSTRAINT pkIptuImovel PRIMARY KEY (cdImovel, cdParcela, aaIptu)

DROP TABLE tbIPTU_Imovel

--/*===============================================	INSERT ===============================================*/
-- TB ESTADO
INSERT INTO tbEstado (sgEstado, nmEstado) VALUES ('SP', 'SÃO PAULO')
INSERT INTO tbEstado (sgEstado, nmEstado) VALUES ('RJ', 'RIO DE JANEIRO')

-- TB CIDADE
INSERT INTO tbCidade(cdCidade, nmCidade, sgEstado) VALUES (1, 'SÃO PAULO', 'SP')
INSERT INTO tbCidade(cdCidade, nmCidade, sgEstado) VALUES (2, 'SANTO ANDRÉ', 'SP')
INSERT INTO tbCidade(cdCidade, nmCidade, sgEstado) VALUES (3, 'CAMPINAS', 'SP')
INSERT INTO tbCidade(cdCidade, nmCidade, sgEstado) VALUES (1, 'RIO DE JANEIRO', 'RJ')
INSERT INTO tbCidade(cdCidade, nmCidade, sgEstado) VALUES (2, 'NITEROI', 'RJ')

-- TB BAIRRO
INSERT INTO tbBairro(cdBairro, nmBairro, cdCidade, sgEstado) VALUES (1, 'JARDINS', '1', 'SP')
INSERT INTO tbBairro(cdBairro, nmBairro, cdCidade, sgEstado) VALUES (2, 'MORUMBI', '1', 'SP')
INSERT INTO tbBairro(cdBairro, nmBairro, cdCidade, sgEstado) VALUES (3, 'AEROPORTO', '1', 'SP')
INSERT INTO tbBairro(cdBairro, nmBairro, cdCidade, sgEstado) VALUES (1, 'AEROPORTO', '1', 'RJ')
INSERT INTO tbBairro(cdBairro, nmBairro, cdCidade, sgEstado) VALUES (2, 'NITEROI', '1', 'RJ')

-- TB VENDEDOR
INSERT INTO tbVendedor(cdVendedor, nmVendedor, dsEndereco, dsEmail) VALUES (1, 'MARIA DA SILVA', 'RUA DO GRITO, 45', 'msilva@nova.com')
INSERT INTO tbVendedor(cdVendedor, nmVendedor, dsEndereco, dsEmail) VALUES (2, 'MARCO ANDRADE ', 'AV. DA SAUDADE,325', 'mandrade@nova.com')
INSERT INTO tbVendedor(cdVendedor, nmVendedor, dsEndereco, dsEmail) VALUES (3, 'ANDRÉ CARDOSO', 'AV. BRASIL, 401', 'acardoso@nova.com')
INSERT INTO tbVendedor(cdVendedor, nmVendedor, dsEndereco, dsEmail) VALUES (4, 'TATIANA SOUZA', 'RUA IMPERADOR, 778', 'tsouza@nova.com')

-- TB IMOVEL
INSERT INTO tbImovel(cdImovel, cdVendedor, cdBairro, cdCidade, sgEstado, dsEndereco, qtAreaUtil, qtAreaTotal, vlImovel) 
	VALUES	  (1, 1, 1, 1, 'SP', 'AL. TIETE, 3304/101', 250, 400, 180000)
			, (2, 1, 2, 1, 'SP', 'AV. MORUMBI, 2230', 150, 250, 135000)
			, (3, 1, 1, 1, 'RJ', 'R. GAL. OSORIO, 445/34', 250, 400, 185000)
			, (4, 2, 2, 1, 'RJ', 'R. D. PEDRO I, 882', 120, 200, 110000)
			, (5, 3, 3, 1, 'SP', 'AV. RUBENS BERTA, 2355', 110, 200, 95000)
			, (6, 4, 1, 1, 'RJ', 'R. GETULIO VARGAS, 552 ', 200, 300, 99000)

-- TB COMPRADOR
INSERT INTO tbComprador(cdComprador, nmComprador, dsEndereco, dsEmail) 
	VALUES    (1, 'EMMANUEL ANTUNES', 'R. SARAIVA, 452', 'eantunes@nova.com')
		    , (2, 'JOANA PEREIRA', 'AV PROTUGAL, 52 ', 'jpereira@nova.com')
		    , (3, 'RONALDO CAMPELO', 'R. ESTADOS UNIDOS', 'rcampelo@nova.com')
		    , (4, 'MANFRED AUGUSTO', 'AV. BRASIL,351', 'maugusto@nova.com')

-- TB OFERTA
INSERT INTO tbOferta(cdComprador, cdImovel, vlOferta, dtOferta) 
	VALUES    (1, 1, 170000, '10/01/09')
	        , (1, 3, 180000, '10/01/09')
	        , (2, 2, 135000, '15/01/09')
	        , (2, 4, 100000, '15/02/09')
	        , (3, 1, 160000, '05/01/09')
	        , (3, 2, 140000, '20/02/09')

-- TB FAIXA IMOVEL
INSERT INTO tbFaixaImovel(cdFaixa, nm_Faixa, vlMinimo, vlMaximo) 
	VALUES    (1, 'BAIXO', 0, 105000)
			, (2, 'MEDIO', 105001, 180000)
			, (3, 'ALTO', 180001, 999999)






--/*=============================================== ATRIBUTO CHECK ===============================================*/

--CREATE TABLE tbExemplo(
--    clExemplo CHAR(02) CHECK (clExemplo > 5) -- O valor terá que ser maior que 5
--	, nmEstado VARCHAR(40) NOT NULL
--  , sgSexoExemplo CHAR(1) CONSTRAINT ckSexo CHECK(sgSexo IN('F','M'))
--  , dsEmailExemplo VARCHAR(40) NOT NULL UNIQUE
--)

/*=============================================== ADICIONANDO CONSTRAINT NA TABELA EXISTENTE ===============================================*/
-- ALTER TABLE tbExemplo
-- ADD CONSTRAINT fkBairroCidadeEstado FOREIGN KEY (cdBairro, cdCidade, sgEstado)
-- ADD CONSTRAINT ckEstado CHECK sgEstado IN ('MG','SP','RJ')
-- DROP CONSTRAINT 
-- REFERENCES tbBairro

/*=============================================== RENOMEANDO A TABELA ===============================================*/
-- Exec sp_Rename
--    'dbo.Departamento','dbo.Dpto'
-- Exec 'Dpto.nmEmp'.'Dpto.Empregado'

/*=============================================== AULA 05 ===============================================*/



